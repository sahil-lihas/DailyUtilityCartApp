{"version":3,"sources":["Bread.jpg","eggs.jpg","cheese.jpeg","milk.jpg","components/Header.js","components/Additem.js","components/Home.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","className","NavItem","NavLink","AddItem","itemname","useState","itemcount","setcount","Button","onClick","e","preventDefault","quantity","axios","post","name","then","resp","status","alert","catch","err","handleadd","items","image","bread","eggs","cheese","milk","Home","map","item","index","key","Card","CardHeader","CardImg","src","CardTitle","CardBody","Cart","cartitems","setcartitems","getCartItems","Axios","get","headers","data","update","put","params","handlesubtract","itename","quant","delete","useEffect","style","minHeight","it","_id","Badge","cursor","App","exact","path","component","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.adb14745.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bread.09b23548.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eggs.89e849f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cheese.d6e3db42.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/milk.92678e66.jpg\";","import React from 'react';\nimport {Navbar,NavItem,NavLink, NavbarBrand,Nav, NavbarToggler, Collapse} from 'reactstrap';\n\nfunction Header(props){\n    return(\n    <div>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand href=\"/\">Bucketeer</NavbarBrand>\n        <NavbarToggler/>\n        <Collapse navbar>\n          <Nav className=\"mr-auto\" navbar>\n          <NavItem >\n              <NavLink href=\"/\" className=\"mx-2\">Home</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/cart\" className=\"mx-2\">Cart</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n    )\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport {Button} from 'reactstrap';\n\nconst addroute = '/api/item';\n\nconst handleadd = (itemname, quantity) =>{\n    axios.post(addroute, {\n        name: itemname,\n        quantity: quantity\n    }).then(resp=>{\n        if(resp.status ===200)\n        alert(`Added ${quantity} ${itemname}`)   \n    }).catch(err=>{\n        alert(`Could not add to cart, Please try again later`);\n    });\n    \n}\n\n\nfunction AddItem({itemname}){\n\n    const [itemcount,setcount] = useState(0);\n\n    return(\n        <>\n            <div className=\"row justify-content-center\">\n                                <div className=\"col-3 text-center\">\n                                    <Button color=\"primary\" onClick={()=>{\n                                        itemcount>=1?setcount(itemcount-1):setcount(itemcount)\n                                    }}> - </Button>\n                                </div>\n                                <div className=\"col-6 text-center\">\n                                    <p>{itemcount}</p>\n                                </div>\n                                <div className=\"col-3 text-center\">\n                                    <Button color=\"primary\" onClick={()=>{\n                                        itemcount<=9?setcount(itemcount+1):setcount(itemcount)\n                                    }}> + </Button>\n                                </div>\n                            </div>\n\n            <div className=\"row justify-content-center\">\n                <Button color=\"secondary\" onClick= { (e)=>{ e.preventDefault()\n                    handleadd(itemname,itemcount) }}>Add To Cart</Button>\n            </div>       \n        </>\n)\n}\n\nexport default AddItem;","import React from 'react'\nimport bread from '../Bread.jpg'\nimport eggs from '../eggs.jpg'\nimport cheese from '../cheese.jpeg'\nimport milk from '../milk.jpg'\nimport {Card, CardImg, CardBody, CardTitle, Button, CardHeader} from 'reactstrap';\nimport AddItem from './Additem';\n\nconst items = [\n    {\n        name: 'Organic Bread',\n        image: bread\n    },\n    {\n        name: 'Farm Fresh Eggs',\n        image: eggs\n    },\n    {\n        name: 'Dairy Cheese',\n        image: cheese\n    },\n    {\n        name: 'Pure Milk',\n        image: milk\n    },\n    {\n        name: 'Cookies',\n        image: 'https://live.staticflickr.com/65535/48993897996_6d6199c799_o.jpg'\n    }\n]\n\n\nfunction Home(props) {\n    return(\n        <div className=\"container my-4\">\n            <div className=\"row\">\n            {items.map((item,index)=>{\n                return(\n                    <div className=\"col-3 my-4\" key={index}>\n                    <Card>\n                        <CardHeader>\n                            <p className=\"text-center\">\n                                {item.name}\n                            </p>\n                        </CardHeader>\n                        <CardImg src={item.image} />\n                        <CardTitle />\n                        <CardBody>\n                            <AddItem itemname={item.name}/>\n                        </CardBody>\n                    </Card>\n                    </div>\n                )\n            })}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import React, { useEffect, useReducer, useState } from 'react'\nimport {Button, Badge} from 'reactstrap'\nimport Axios from 'axios';\nconst getitems = '/api/item';\nconst updateitems = '/api/item/update';\nconst deleteitem = `/api/item/delete`;\n\nfunction Cart(props) {\n\n    const [cartitems,setcartitems] = useState();\n    \n    const getCartItems = () =>{\n        Axios.get(getitems,{headers:{'accept': 'application/json'}}).then(resp=>{\n            setcartitems(resp.data);\n    }) }\n    \n    const update = (itemname, quantity) =>{\n        Axios.put(updateitems,{\n            name: itemname,\n            quantity: quantity\n        },{\n            params: {\n                name: itemname\n            }\n        }).then(resp=>{\n            getCartItems();\n        })\n    }\n\n    const deleteItem = (itemname) =>{\n        Axios.delete(deleteitem+`?name=${itemname}`).then(resp=>{\n            getCartItems();\n        }).catch(err=>{\n            alert(`not able to delete item ${itemname}, Please try again`)\n        })\n    }\n\n    const handlesubtract = (itename,quant) =>{\n        if(quant === 1)\n        {\n            deleteItem(itename);\n        }\n        else{\n            update(itename,quant-1);\n        }\n    }\n\n\n    const handleadd = (itename,quant) =>{\n        \n        if(quant === 10){\n            alert('cannot add more than 10 for this item ');\n        }\n        else{\n            update(itename,quant+1);\n        }\n    }\n\n   \n   useEffect(()=>{\n        getCartItems();\n    },[])\n    \n    if(!cartitems)\n        return(<div>Loading....</div>)\n    else \n    return(\n        <div className=\"container mt-5\" style={{minHeight:'100%'}}>\n           \n            {cartitems.items.map(it=>{\n                return(\n                    <div className=\"row justify-content-start\" key={it._id}>\n                        <div className=\"col-6\">\n                            \n                            <p>{it.name}</p>\n                            \n                        </div>\n                        <div className=\"col-6\">\n                        <Badge color=\"secondary\" style={{cursor: 'pointer'}} onClick={()=>{handlesubtract(it.name,it.quantity)}}>-</Badge>\n                           <span className=\"mx-2\">{it.quantity}</span>\n                        <Badge color=\"secondary\" style={{cursor: 'pointer'}} onClick={()=>{handleadd(it.name,it.quantity)}}>+</Badge>\n                        </div>\n                    </div>\n                )\n            })\n        }\n       \n\n        <div className=\"my-5 justify-content-start\">\n\n            <Button>Checkout</Button>\n        </div>\n\n        </div>\n    )\n}\n\nexport default Cart;\n","import React from 'react';\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Cart from './components/Cart';\n\n\nfunction App() {\n  return (\n    <>\n    <Header />\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component ={Home} />\n        <Route exact path=\"/cart\" component ={Cart} />\n        <Redirect to=\"/\" component={Home}/>\n      </Switch>\n    </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.COOPER_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}